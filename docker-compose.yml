volumes:
 postgis-data:

networks:
 poi_network:

services:
 nominatim:
  image: mediagis/nominatim:5.1
  ports:
    - "5001:8080"
  environment:
    - PBF_PATH=/deploy/app/osm/israel-and-palestine-latest.osm.pbf
  depends_on:
    - api
  volumes:
    - ./osm:/deploy/app/osm
    
 api:
  container_name: ops-api
  build: .
  volumes:
  - ./osm:/deploy/app/osm
#  - ./ops_settings_docker.yml:/deploy/app/openpoiservice/server/ops_settings.yml
#  - ./categories_docker.yml:/deploy/app/openpoiservice/server/categories/categories.yml
  ports:
   - "5000:5000"
  depends_on:
    db:
      condition: service_healthy
  mem_limit: 28g
  networks:
   - poi_network

 # Don't forget to change the host name inside ops_settings_docker.yml by the one given to docker container.
 # Also port should be set to 5432 (default value) inside the same file since they are on the same network
 db:
  container_name: ops-db
  image: postgis/postgis:16-3.4
  volumes:
   - postgis-data:/var/lib/postgresql
  environment:
   # If you need to create multiple database you can add coma separated databases eg gis,data
   - POSTGRES_DB=gis
   - POSTGRES_USER=gis_admin    # Here it's important to keep the same name as the one configured inside ops_settings_docker.yml
   - POSTGRES_PASSWORD=admin        # Here it's important to keep the same name as the one configured inside ops_settings_docker.yml
   - POSTGRES_DBNAME=gis        # Here it's important to keep the same name as the one configured inside ops_settings_docker.yml
   - ALLOW_IP_RANGE=0.0.0.0/0
#  ports:
#   - 5432:5432
  healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 10
  restart: on-failure
  networks:
   - poi_network

 # These two services will not start by default and can be run as necessary:
 # docker-compose up init
 # docker-compose up update
 init:
  profiles: [ init ]
  container_name: ops-init
  build: .
  environment:
   - INIT_DB=1
  volumes:
  - ./osm:/deploy/app/osm
  - ./import-log.json:/deploy/app/import-log.json
#  - ./ops_settings_docker.yml:/deploy/app/openpoiservice/server/ops_settings.yml
#  - ./categories_docker.yml:/deploy/app/openpoiservice/server/categories/categories.yml
  depends_on:
    db:
      condition: service_healthy
  mem_limit: 28g
  networks:
   - poi_network

 update:
  profiles: [ init ]
  container_name: ops-update
  build: .
  environment:
   - UPDATE_DB=1
  volumes:
  - ./osm:/deploy/app/osm
  - ./import-log.json:/deploy/app/import-log.json
#  - ./ops_settings_docker.yml:/deploy/app/openpoiservice/server/ops_settings.yml
#  - ./categories_docker.yml:/deploy/app/openpoiservice/server/categories/categories.yml
  depends_on:
    db:
      condition: service_healthy
  mem_limit: 28g
  networks:
   - poi_network

 test:
  profiles: [ test ]
  container_name: ops-test
  build: .
  environment:
   - TESTING=True
  volumes:
   - ./osm:/deploy/app/osm
   - ./osm_test:/deploy/app/osm_test
#   - ./ops_settings_docker.yml:/deploy/app/openpoiservice/server/ops_settings.yml
#   - ./categories_docker.yml:/deploy/app/openpoiservice/server/categories/categories.yml
  depends_on:
    db:
      condition: service_healthy
  mem_limit: 8g
  networks:
   - poi_network
